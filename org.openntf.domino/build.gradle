/*
 * Copyright 2013
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

 apply plugin: 'java'
 //apply plugin: 'osgi'
 
 defaultTasks 'build'
 
 group = 'org.openntf'
 version = new Version(major: 0, minor: 3, revision: 0, snapshot: true)
 
 
ext {
	 fullName = 'org/openntf/domino'
	 fullDescription = 'OpenNTF Domino API - Open replacement for lotus.domino package in IBM Domino'
	 siteUrl = 'http://www.openntf.org'
	 sourceUrl = 'https://github.com/OpenNTF/org.openntf.domino.git'
 	teamName = 'org.openntf'
	 jre = '/opt/ibm/domino/notes/latest/linux/jvm/lib'
}
 
 repositories {
	 mavenCentral()
 }
 
 sourceCompatibility = 1.6
 targetCompatibility = 1.6
 
 sourceSets {
	main {
        java {
            srcDirs 'src','tinkerpop','icu4j'
        }
		resources {
			srcDirs 'resources', 'icu4j'
			exclude 'doc', 'devnotes.txt'
		}
    }
 }
 
 dependencies {
	 compile fileTree(jre)
	 compile 'xerces:xercesImpl:2.8.0'
 }
 
 javadoc {
	 title = '<h1>org.openntf.domino</h1>'
 
	 options.addStringOption('XDignore.symbol.file', '-quiet')
	 options.author = true
	 //options.bottom = "<i>Copyright &#169; 2011 - ${Calendar.instance[Calendar.YEAR]} LMAX Ltd. All Rights Reserved.</i>"
	 options.use = true
	 options.version = true
	 options.windowTitle = 'org.openntf.domino API'
 }
 
jar {
	 manifest.from('META-INF/MANIFEST.MF')
 }
 
 task sourcesJar(type: Jar) {
	 classifier = 'sources'
	 from sourceSets.main.allSource
 }
 
 task javadocJar(type: Jar, dependsOn: javadoc) {
	 classifier = 'javadoc'
	 from javadoc.destinationDir
 }
 
 artifacts {
	 archives sourcesJar, javadocJar
 }
 
 task wrapper(type: Wrapper) {
	 gradleVersion = '1.7'
 }
 
 class Version {
	 int major, minor = 0, revision = 0
	 boolean snapshot
	 String stage
 
	 String toString() {
		 "$major.$minor.$revision${stage ? '.' + stage : ''}${snapshot ? '-SNAPSHOT' : ''}"
	 }
 }