################################################################################################################
#
# LOGCONFIG.PROPERTIES
#
#   Configuration for logging in openntf. Configured are Handlers and FilterHandlers (see below), both of them are required.
#   It is supposed that the file path of this property file is
#                    <notesdata>/IBM_TECHNICAL_SUPPORT/org.openntf.domino.logging.logconfig.properties
#   where <notesdata> denotes the Domino data directory.
#
#   This configuration file will be checked periodically for changes (every minute), and the logging configuration will be
#   updated dynamically.
#
#   Of course, this is not a configuration for LogManager.
#
#   Finally, a self-evident warning: Configuring logging filter entries in a FilterHandler to a small log level may lead to a
#   decrease in performance.
#
################################################################################################################
#
# Handlers
#
#   You may define arbitrary many handlers. These handlers must be listed in "Handlers=".
#
#   Each handler is configured by Handler.<handler name>-properties, where the following properties may/must be defined:
#
#     Class          required  the handler's class name (subclass of java.util.logging.Handler)
#     MinimalLevel   optional  the minimal level (SEVERE, WARNING, FINE, ...) the handler may publish
#     Formatter      optional  a class for the handler's Formatter; if none is specified, some default formatter is used
#     Props          optional  set of comma-separated properties for handler configuration
#
#   A handler's class must implement some static methods which will be called via reflection:
#
#     LogHandlerConfigIF
#                    configFromProps(String props) [public static]
#                       The "Props" from above are examined, the resulting Object should contain a configuration set
#                       for the handler. In case of "wrong" props, an Exception should be thrown.
#     <HandlerClass> getInstance(LogHandlerConfigIF config, boolean useDefaultFormatter) [public static]
#                       Parameter config contains the return value from configFromProps, useDefaultFormatter is true
#                       if (and only if) no Formatter is configured.
#
#   Additionally, a handler may implement the LogHandlerUpdateIF interface to enable the handler to be dynamically
#   attached to a new log configuration.
#
#   The 3 handler classes below are ready-to-use, but there may well be arbitrary more classes.
#
################################################################################################################

Handlers=HFile1, HConsole, HLogDB, HFile2

Handler.HFile1.Class=org.openntf.domino.logging.LogHandlerFile
Handler.HFile1.Props=	Limit=50000000,	\
			Count=10, \
			Append=true, \
			Pattern=<notesdata>/IBM_TECHNICAL_SUPPORT/org.openntf.log.%u.%g.txt

Handler.HConsole.Class=org.openntf.domino.logging.LogHandlerConsole
Handler.HConsole.MinimalLevel=WARNING

Handler.HLogDB.Class=org.openntf.domino.logging.LogHandlerOpenLog
Handler.HLogDB.MinimalLevel=INFO
Handler.HLogDB.Props=	LogDB=OpenLog.nsf

Handler.HFile2.Class=org.openntf.domino.logging.LogHandlerFile
Handler.HFile2.Formatter=org.openntf.domino.logging.LogFormatterFileDefault
Handler.HFile2.Props=	Limit=50000000, \
			Count=10, \
			Append=true, \
			Pattern=<notesdata>/IBM_TECHNICAL_SUPPORT/foconis.hvm.log.%u.%g.txt

################################################################################################################
#
# FilterHandlers
#
#   The Handlers defined above aren't directly attached to Loggers, but only through FilterHandlers. A FilterHandler is
#   connected to one or more "native" Loggers (property LoggerPrefices below), logging with a default level (property
#   DefaultLevel below) to one or more Handlers (property DefaultHandlers below).
#
#   In addition there may be defined arbitrarily many Filter Config Entries, which specify further logging to be done for
#   child Loggers of the Loggers given by LoggerPrefices, presumably with a lower logging level based on some condition
#   (e.g. actual day is Monday to Friday, actual time is between 15:00 and 19:00, the actual user is whatever, ...),
#   and probably employing other Handlers.
#
#   There may be defined arbitrarily many FilterHandlers listed in "FilterHandlers=". Most likely, one FilterHandler will be
#   sufficient in most cases, however.
#
#   A FilterHandler is configured by properties "FilterHandler.<name>.xxx". The basic properties LoggerPrefices, DefaultLevel,
#   and DefaultHandlers are all required. Optionally, Filter Config Entries may be configured for the FilterHandler. For the
#   sake of simplicity, these entries are supposed to be numbered FCE1, FCE2, ..., and the first empty FCE<n> denotes the
#   end of the entry set. - Filter Config Entries are configured by:
#
#      FCE<n>                   required  Logger name; must be a child of one of the FilterHandler's loggers
#      FCE<n>.Level             required  FINEST, FINER, FINE, CONFIG, INFO, WARNING, or SEVERE
#      FCE<n>.Handlers          required  One or more defined Handlers (not necessarily contained in DefaultHandlers)
#      FCE<n>.FormulaCondition  optional  Condition as a formula (in Formula Language); the following variables may be used:
#                                             $USER$     the actual user (given by Session.getEffectiveUser)
#                                             $DBPATH$   path of the current DB (getApiPath)
#                                             $LOGGER$   the Logger which generated the LogRecord
#                                             $MESSAGE$  the LogRecord's message
#      FCE<n>.ValidUntil        optional  Expiration date in ISO format (yyyy-mm-dd), i.e. the whole FCE entry is ignored, if
#                                         the actual date is > ValidUntil.
#
################################################################################################################

FilterHandlers=OpenNTFFoc

FilterHandler.OpenNTFFoc.LoggerPrefices=org.openntf.domino, de.foconis
FilterHandler.OpenNTFFoc.DefaultLevel=WARNING
FilterHandler.OpenNTFFoc.DefaultHandlers=HFile1, HConsole, HLogDB
#
# FilterHandler Filter Config Entries (FCE<n>)
#
FilterHandler.OpenNTFFoc.FCE1=org.openntf.domino.impl.Document
FilterHandler.OpenNTFFoc.FCE1.Level=FINE
FilterHandler.OpenNTFFoc.FCE1.Handlers=HFile1
FilterHandler.OpenNTFFoc.FCE1.FormulaCondition=t:=@Text(@Time(@Now)); t>="15:00" & t < "19:00" & @Ends($DBPATH$; "hvm.nsf")

FilterHandler.OpenNTFFoc.FCE2=de.foconis.hvm
FilterHandler.OpenNTFFoc.FCE2.Level=FINER
FilterHandler.OpenNTFFoc.FCE2.Handlers=HFile1
FilterHandler.OpenNTFFoc.FCE2.FormulaCondition=@Weekday(@Now) = 2:3:4:5:6 & \
				($USER$="CN=Roland Praml/OU=01/OU=int/O=FOCONIS" | \
				 $USER$="CN=Manfred Steinsiek/OU=01/OU=int/O=FOCONIS")
FilterHandler.OpenNTFFoc.FCE2.ValidUntil=2014-09-03

FilterHandler.OpenNTFFoc.FCE3=de.foconis.hvm
FilterHandler.OpenNTFFoc.FCE3.Level=INFO
FilterHandler.OpenNTFFoc.FCE3.Handlers=HLogDB, HFile2
FilterHandler.OpenNTFFoc.FCE3.FormulaCondition=@Like($USER$; "%Manfred%FOCONIS")

FilterHandler.OpenNTFFoc.FCE4=de.foconis.hvm
FilterHandler.OpenNTFFoc.FCE4.Level=FINEST
FilterHandler.OpenNTFFoc.FCE4.Handlers=HLogDB, HFile2
FilterHandler.OpenNTFFoc.FCE4.FormulaCondition=@Contains($LOGGER$; "Notification")
