/* Generated By:JJTree&JavaCC: Do not edit this line. AtFormulaParserConstants.java */
/* * Â© Copyright FOCONIS AG, 2014 *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at: *  * http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or  * implied. See the License for the specific language governing  * permissions and limitations under the License. */
package org.openntf.domino.formula;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AtFormulaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int Date_or_KW = 1;
  /** RegularExpression Id. */
  int OSubscript = 2;
  /** RegularExpression Id. */
  int CSubscript = 3;
  /** RegularExpression Id. */
  int EOS = 4;
  /** RegularExpression Id. */
  int OParen = 5;
  /** RegularExpression Id. */
  int CParen = 6;
  /** RegularExpression Id. */
  int Assign = 7;
  /** RegularExpression Id. */
  int BoolNot = 8;
  /** RegularExpression Id. */
  int KW_DEFAULT = 9;
  /** RegularExpression Id. */
  int KW_ENVIRONMENT = 10;
  /** RegularExpression Id. */
  int KW_FIELD = 11;
  /** RegularExpression Id. */
  int KW_REM = 12;
  /** RegularExpression Id. */
  int KW_SELECT = 13;
  /** RegularExpression Id. */
  int At_do = 14;
  /** RegularExpression Id. */
  int At_doWhile = 15;
  /** RegularExpression Id. */
  int At_for = 16;
  /** RegularExpression Id. */
  int At_if = 17;
  /** RegularExpression Id. */
  int At_v2if = 18;
  /** RegularExpression Id. */
  int At_iferror = 19;
  /** RegularExpression Id. */
  int At_transform = 20;
  /** RegularExpression Id. */
  int At_other = 21;
  /** RegularExpression Id. */
  int ListConcat = 22;
  /** RegularExpression Id. */
  int OpMul = 23;
  /** RegularExpression Id. */
  int OpMulP = 24;
  /** RegularExpression Id. */
  int OpDiv = 25;
  /** RegularExpression Id. */
  int OpDivP = 26;
  /** RegularExpression Id. */
  int OpPlus = 27;
  /** RegularExpression Id. */
  int OpPlusP = 28;
  /** RegularExpression Id. */
  int OpMinus = 29;
  /** RegularExpression Id. */
  int OpMinusP = 30;
  /** RegularExpression Id. */
  int CmpEqual = 31;
  /** RegularExpression Id. */
  int CmpEqualP = 32;
  /** RegularExpression Id. */
  int CmpNE = 33;
  /** RegularExpression Id. */
  int CmpNEP = 34;
  /** RegularExpression Id. */
  int CmpLT = 35;
  /** RegularExpression Id. */
  int CmpLTP = 36;
  /** RegularExpression Id. */
  int CmpGT = 37;
  /** RegularExpression Id. */
  int CmpGTP = 38;
  /** RegularExpression Id. */
  int CmpLTE = 39;
  /** RegularExpression Id. */
  int CmpLTEP = 40;
  /** RegularExpression Id. */
  int CmpGTE = 41;
  /** RegularExpression Id. */
  int CmpGTEP = 42;
  /** RegularExpression Id. */
  int BoolAnd = 43;
  /** RegularExpression Id. */
  int BoolOr = 44;
  /** RegularExpression Id. */
  int NumDoubleUS = 45;
  /** RegularExpression Id. */
  int NumDoubleDE = 46;
  /** RegularExpression Id. */
  int NumInteger = 47;
  /** RegularExpression Id. */
  int Exponent = 48;
  /** RegularExpression Id. */
  int String1 = 49;
  /** RegularExpression Id. */
  int String2 = 50;
  /** RegularExpression Id. */
  int Identifier = 51;
  /** RegularExpression Id. */
  int Letter = 52;
  /** RegularExpression Id. */
  int Digit = 53;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int SUBSCRIPT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<Date_or_KW>",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\":=\"",
    "\"!\"",
    "\"DEFAULT\"",
    "\"ENVIRONMENT\"",
    "\"FIELD\"",
    "\"REM\"",
    "\"SELECT\"",
    "\"@do\"",
    "\"@doWhile\"",
    "\"@for\"",
    "\"@if\"",
    "\"@V2if\"",
    "\"@iferror\"",
    "\"@transform\"",
    "<At_other>",
    "\":\"",
    "\"*\"",
    "\"**\"",
    "\"/\"",
    "\"*/\"",
    "\"+\"",
    "\"*+\"",
    "\"-\"",
    "\"*-\"",
    "\"=\"",
    "\"*=\"",
    "<CmpNE>",
    "\"*<>\"",
    "\"<\"",
    "\"*<\"",
    "\">\"",
    "\"*>\"",
    "\"<=\"",
    "\"*<=\"",
    "\">=\"",
    "\"*>=\"",
    "\"&\"",
    "\"|\"",
    "<NumDoubleUS>",
    "<NumDoubleDE>",
    "<NumInteger>",
    "<Exponent>",
    "<String1>",
    "<String2>",
    "<Identifier>",
    "<Letter>",
    "<Digit>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
  };

}
