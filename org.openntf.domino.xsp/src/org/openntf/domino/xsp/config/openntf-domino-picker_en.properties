# *****************************************************************
# /*
# * Copyright IBM Corp. 2010, 2013
# * 
# * Licensed under the Apache License, Version 2.0 (the "License"); 
# * you may not use this file except in compliance with the License. 
# * You may obtain a copy of the License at:
# * 
# * http://www.apache.org/licenses/LICENSE-2.0
# * 
# * Unless required by applicable law or agreed to in writing, software 
# * distributed under the License is distributed on an "AS IS" BASIS, 
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
# * implied. See the License for the specific language governing 
# * permissions and limitations under the License.
# */
# *****************************************************************
# DO NOT EDIT. THIS FILE IS GENERATED.
# NLS_ENCODING=UNICODE 
# NLS_MARKUP=IBMNJDK2 
# NLS_MESSAGEFORMAT_NONE
## G11N SA UI -- Special IT Audience resources follow
complex-type.dominoViewValuePicker.name= Value Picker Data Provider for View or Folder
complex-type.dominoViewValuePicker.descr= Value picker data provider that reads the data from a Domino view or folder
property.labelColumn.complex-type.dominoViewValuePicker.name= Label Column Name
property.labelColumn.complex-type.dominoViewValuePicker.descr= Name of the column whose value will be used in the picker as a label
property.searchType.name= Type of Search
# "match" "ftSearch" and "startFrom" should not be translated
property.searchType.descr= Define the type of search to be applied. The options are "match", meaning the search value is matched to a key or keys in the view, "ftSearch" meaning the value is found in a full text search of the entry and "startFrom", the default search type, which matches the value as a key and then returns that entry and all subsequent entries.
complex-type.dominoNABNamePicker.name= Domino Address Book Name Picker Data Provider
complex-type.dominoNABNamePicker.descr= Name picker data provider that reads the data from a Domino address book
property.addressBookSel.name= Address Book Selection
property.addressBookSel.descr= Defines the list of address book databases
property.addressBookDb.name= Address Book Database Name
# "addressBookSel" "db-name" should not be translated
property.addressBookDb.descr= Defines the name of the database containing the address book if the selection type for "addressBookSel" property is "db-name"
property.nameList.name= Name List Type
property.nameList.descr= This defines the list of names to be displayed, like people or groups. When this property is set, then the people and group boolean properties are ignored.
property.people.name= Include People
# "nameList" should not be translated
property.people.descr= Specifies whether or not to include people entries. Default is true. Only used when the "nameList" property is absent.
property.groups.name= Include Groups
# "nameList" should not be translated
property.groups.descr= Specifies whether or not to include group entries. Default is true. Only used when the "nameList" property is absent.
property.returnNameFormat.name= Name Format for value property
property.returnNameFormat.descr= Specifies the format for the value property passed back to the field. Names, Authors and Readers fields should receive Canonical format to function properly. Dojo List Text Box can display the label instead of the value, but some formats, e.g. Common, may match multiple labels. Some formats may also be blank for some people / groups, e.g. OrgUnit1.
complex-type.dominoViewNamePicker.name= Name Picker Data Provider for View or Folder
complex-type.dominoViewNamePicker.descr= Name Picker data provider that reads its data from a Domino view or folder
property.labelColumn.complex-type.dominoViewNamePicker.name= Label Column Name
property.labelColumn.complex-type.dominoViewNamePicker.descr= Name of the column in the view whose value will be used in the picker as a label
property.label.name= Data Provider Label
property.label.descr= Label of this name data provider, to uniquely identify it when using multiple data providers. This appears in the picker control dialog in the list where users can choose which directory to search.

complex-type.mapPicker.name= Map Picker Data Provider
complex-type.mapPicker.descr= Map Picker Data Provider that takes its content from a Map<String,String>
property.map.complex-type.mapPicker.name= Map
property.map.complex-type.mapPicker.descr= Map for the MapPicker, implementation of Map (e.g. LinkedHashMap)
property.caseInsensitive.name= Case Insensitive Key
property.caseInsensitive.descr= Specifies if the key being used should be treated as case insensitive
property.searchStyle.name= Style of Search
property.searchStyle.descr= Define the style of search to be used. The default is "jumpTo", working like the Extension Library picker searches - jumping to the first entry matching the search type and showing all remaining entries. The alternative is "restrictToSearch", so showing only those entries that match the search criteria.
complex-type.collectionPicker.name= Collection Picker Data Provider
complex-type.collectionPicker.descr= Collection Picker Data Provider that takes its content from a List, Set, Vector etc
property.collection.complex-type.collectionPicker.name= Collection
property.collection.complex-type.collectionPicker.descr= Collection for the CollectionPicker, implementation of Set or List (e.g. TreeSet or ArrayList)
complex-type.enumPicker.name= Enum Picker Data Provider
complex-type.enumPicker.descr= Enum Picker Data Provider that takes its content from an Enum
property.enum.complex-type.enumPicker.name= Enum
property.enum.complex-type.enumPicker.descr= Name of an enum to use as the list of options
property.sorted.name= Sorted
property.sorted.descr= Whether the enum should be sorted alphabetically
complex-type.openntfViewValuePicker.name= Value Picker Data Provider for View or Folder
complex-type.openntfViewValuePicker.descr= Value picker data provider that reads the data from a Domino view or folder
property.labelColumn.complex-type.openntfViewValuePicker.name= Label Column Name
property.labelColumn.complex-type.openntfViewValuePicker.descr= Name of the column whose value will be used in the picker as a label
