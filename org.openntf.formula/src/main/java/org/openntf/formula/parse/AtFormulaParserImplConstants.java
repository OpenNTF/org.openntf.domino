/* Generated By:JJTree&JavaCC: Do not edit this line. AtFormulaParserImplConstants.java */
/*
 *  Â© Copyright FOCONIS AG, 2014
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at:
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 
 * implied. See the License for the specific language governing 
 * permissions and limitations under the License.
 */
package org.openntf.formula.parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AtFormulaParserImplConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 7;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int NORMAL_TEXT = 9;
  /** RegularExpression Id. */
  int BEGIN_FORMULA = 10;
  /** RegularExpression Id. */
  int BEGIN_PARAM = 11;
  /** RegularExpression Id. */
  int PARAM_VALUE = 12;
  /** RegularExpression Id. */
  int END_PARAM = 13;
  /** RegularExpression Id. */
  int Date_or_KW = 14;
  /** RegularExpression Id. */
  int OSubscript = 15;
  /** RegularExpression Id. */
  int CSubscript = 16;
  /** RegularExpression Id. */
  int EOS = 17;
  /** RegularExpression Id. */
  int OParen = 18;
  /** RegularExpression Id. */
  int CParen = 19;
  /** RegularExpression Id. */
  int Assign = 20;
  /** RegularExpression Id. */
  int KW_DEFAULT = 21;
  /** RegularExpression Id. */
  int KW_ENVIRONMENT = 22;
  /** RegularExpression Id. */
  int KW_FIELD = 23;
  /** RegularExpression Id. */
  int KW_REM = 24;
  /** RegularExpression Id. */
  int KW_SELECT = 25;
  /** RegularExpression Id. */
  int At_Include = 26;
  /** RegularExpression Id. */
  int At_Function = 27;
  /** RegularExpression Id. */
  int At_do = 28;
  /** RegularExpression Id. */
  int At_doWhile = 29;
  /** RegularExpression Id. */
  int At_while = 30;
  /** RegularExpression Id. */
  int At_for = 31;
  /** RegularExpression Id. */
  int At_if = 32;
  /** RegularExpression Id. */
  int At_v2if = 33;
  /** RegularExpression Id. */
  int At_iferror = 34;
  /** RegularExpression Id. */
  int At_transform = 35;
  /** RegularExpression Id. */
  int At_sort = 36;
  /** RegularExpression Id. */
  int At_text = 37;
  /** RegularExpression Id. */
  int At_eval = 38;
  /** RegularExpression Id. */
  int At_evalex = 39;
  /** RegularExpression Id. */
  int At_foceval = 40;
  /** RegularExpression Id. */
  int At_return = 41;
  /** RegularExpression Id. */
  int At_iserror = 42;
  /** RegularExpression Id. */
  int At_isavailable = 43;
  /** RegularExpression Id. */
  int At_isunavailable = 44;
  /** RegularExpression Id. */
  int At_other = 45;
  /** RegularExpression Id. */
  int ListConcat = 46;
  /** RegularExpression Id. */
  int OpMul = 47;
  /** RegularExpression Id. */
  int OpMulP = 48;
  /** RegularExpression Id. */
  int OpDiv = 49;
  /** RegularExpression Id. */
  int OpDivP = 50;
  /** RegularExpression Id. */
  int OpPlus = 51;
  /** RegularExpression Id. */
  int OpPlusP = 52;
  /** RegularExpression Id. */
  int OpMinus = 53;
  /** RegularExpression Id. */
  int OpMinusP = 54;
  /** RegularExpression Id. */
  int CmpEqual = 55;
  /** RegularExpression Id. */
  int CmpEqualP = 56;
  /** RegularExpression Id. */
  int CmpNE = 57;
  /** RegularExpression Id. */
  int CmpNEP = 58;
  /** RegularExpression Id. */
  int CmpLT = 59;
  /** RegularExpression Id. */
  int CmpLTP = 60;
  /** RegularExpression Id. */
  int CmpGT = 61;
  /** RegularExpression Id. */
  int CmpGTP = 62;
  /** RegularExpression Id. */
  int CmpLTE = 63;
  /** RegularExpression Id. */
  int CmpLTEP = 64;
  /** RegularExpression Id. */
  int CmpGTE = 65;
  /** RegularExpression Id. */
  int CmpGTEP = 66;
  /** RegularExpression Id. */
  int BoolNot = 67;
  /** RegularExpression Id. */
  int BoolAnd = 68;
  /** RegularExpression Id. */
  int BoolOr = 69;
  /** RegularExpression Id. */
  int END_FORMULA = 70;
  /** RegularExpression Id. */
  int NumDoubleUS = 71;
  /** RegularExpression Id. */
  int NumDoubleDE = 72;
  /** RegularExpression Id. */
  int NumInteger = 73;
  /** RegularExpression Id. */
  int Exponent = 74;
  /** RegularExpression Id. */
  int String1 = 75;
  /** RegularExpression Id. */
  int String2 = 76;
  /** RegularExpression Id. */
  int Identifier = 77;
  /** RegularExpression Id. */
  int Letter = 78;
  /** RegularExpression Id. */
  int Digit = 79;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int SUBSCRIPT = 1;
  /** Lexical state. */
  int FOCONIS = 2;
  /** Lexical state. */
  int FOC_PARAM = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "<NORMAL_TEXT>",
    "\"<!\"",
    "\"<#\"",
    "<PARAM_VALUE>",
    "\"#>\"",
    "<Date_or_KW>",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\":=\"",
    "\"DEFAULT\"",
    "\"ENVIRONMENT\"",
    "\"FIELD\"",
    "\"REM\"",
    "\"SELECT\"",
    "\"@Include\"",
    "\"@Function\"",
    "\"@do\"",
    "\"@doWhile\"",
    "\"@while\"",
    "\"@for\"",
    "\"@if\"",
    "\"@V2if\"",
    "\"@iferror\"",
    "\"@transform\"",
    "\"@sort\"",
    "\"@text\"",
    "\"@eval\"",
    "\"@evalex\"",
    "\"@foceval\"",
    "\"@return\"",
    "\"@iserror\"",
    "\"@isavailable\"",
    "\"@isunavailable\"",
    "<At_other>",
    "\":\"",
    "\"*\"",
    "\"**\"",
    "\"/\"",
    "\"*/\"",
    "\"+\"",
    "\"*+\"",
    "\"-\"",
    "\"*-\"",
    "\"=\"",
    "\"*=\"",
    "<CmpNE>",
    "\"*<>\"",
    "\"<\"",
    "\"*<\"",
    "\">\"",
    "\"*>\"",
    "\"<=\"",
    "\"*<=\"",
    "\">=\"",
    "\"*>=\"",
    "\"!\"",
    "\"&\"",
    "\"|\"",
    "\"!>\"",
    "<NumDoubleUS>",
    "<NumDoubleDE>",
    "<NumInteger>",
    "<Exponent>",
    "<String1>",
    "<String2>",
    "<Identifier>",
    "<Letter>",
    "<Digit>",
  };

}
